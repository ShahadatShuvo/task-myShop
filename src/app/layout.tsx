"use client";

import "./globals.css";
import { Inter } from "next/font/google";
import { AllContext } from "./context";
import React, { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface AllProductsInterface {
  id: number | string;
  brand: string;
  category: string;
  description: string;
  discountPercentage: number;
  images: string[];
  price: number;
  rating: number;
  stock: number;
  thumbnail: string;
  qty: number;
  title: string;
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [allProducts, setAllProducts] = useState<any>([]);
  const [isLightTheme, setIsLightTheme] = useState<boolean>(true);

  console.log("allProducts", allProducts);

  const toggleTheme = () => {
    setIsLightTheme((prevTheme: boolean) => !prevTheme);
  };

  const increaseCartValue = (newValue: AllProductsInterface) => {
    setAllProducts((prevState: AllProductsInterface[] | any) => {
      const isExist = prevState.find(
        (item: AllProductsInterface) => item.id === newValue.id
      );
      if (isExist) {
        return prevState.map((item: AllProductsInterface) => {
          if (item.id === newValue.id) {
            return {
              ...item,
              qty: item.qty + 1,
            };
          }
          return item;
        });
      }
      return [...prevState, { ...newValue, qty: 1 }];
    });
  };

  return (
    <html lang="en">
      <body className={inter.className}>
        <AllContext.Provider
          value={{ isLightTheme, toggleTheme, allProducts, increaseCartValue }}
        >
          {children}
        </AllContext.Provider>
      </body>
    </html>
  );
}
